name: Release
on:
  push:
    branches:
      - main  # or your default branch name

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          rustup target add x86_64-pc-windows-msvc

      - name: Install frontend dependencies
        run: npm install

      - name: Get version
        id: version
        shell: pwsh
        run: |
          $version = (Get-Content "src-tauri/tauri.conf.json" | ConvertFrom-Json).package.version
          echo "APP_VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.APP_VERSION }}
          release_name: Release v${{ steps.version.outputs.APP_VERSION }}
          draft: false
          prerelease: false

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ steps.create_release.outputs.id }}
          tagName: v${{ steps.version.outputs.APP_VERSION }}
          releaseName: 'v${{ steps.version.outputs.APP_VERSION }}'
          releaseBody: 'Automatic release from CI'
          releaseDraft: false
          prerelease: false
